/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as AuthenticationImport } from './routes/_authentication'
import { Route as AuthenticationIndexImport } from './routes/_authentication/index'
import { Route as LayoutVideosImport } from './routes/_layout/videos'
import { Route as LayoutScoreboardImport } from './routes/_layout/scoreboard'
import { Route as AuthenticationVerificationImport } from './routes/_authentication/verification'
import { Route as AuthenticationResetpasswordImport } from './routes/_authentication/reset_password'
import { Route as AuthenticationForgotpasswordImport } from './routes/_authentication/forgot_password'
import { Route as LayoutUsersIndexImport } from './routes/_layout/users/index'
import { Route as LayoutReviewIndexImport } from './routes/_layout/review/index'
import { Route as LayoutReferIndexImport } from './routes/_layout/refer/index'
import { Route as LayoutFaqsIndexImport } from './routes/_layout/faqs/index'
import { Route as LayoutEventsIndexImport } from './routes/_layout/events/index'
import { Route as LayoutEventtypeIndexImport } from './routes/_layout/event_type/index'
import { Route as LayoutDiscountIndexImport } from './routes/_layout/discount/index'
import { Route as LayoutUsersFlagedImport } from './routes/_layout/users/flaged'
import { Route as LayoutUsersAcceptedImport } from './routes/_layout/users/accepted'
import { Route as LayoutEventsUpcomingImport } from './routes/_layout/events/upcoming'
import { Route as LayoutEventsEventidImport } from './routes/_layout/events/$event_id'
import { Route as LayoutDiscountUpcomingImport } from './routes/_layout/discount/upcoming'
import { Route as LayoutDiscountDiscountidImport } from './routes/_layout/discount/$discount_id'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationRoute = AuthenticationImport.update({
  id: '/_authentication',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationIndexRoute = AuthenticationIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticationRoute,
} as any)

const LayoutVideosRoute = LayoutVideosImport.update({
  path: '/videos',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutScoreboardRoute = LayoutScoreboardImport.update({
  path: '/scoreboard',
  getParentRoute: () => LayoutRoute,
} as any)

const AuthenticationVerificationRoute = AuthenticationVerificationImport.update(
  {
    path: '/verification',
    getParentRoute: () => AuthenticationRoute,
  } as any,
)

const AuthenticationResetpasswordRoute =
  AuthenticationResetpasswordImport.update({
    path: '/reset_password',
    getParentRoute: () => AuthenticationRoute,
  } as any)

const AuthenticationForgotpasswordRoute =
  AuthenticationForgotpasswordImport.update({
    path: '/forgot_password',
    getParentRoute: () => AuthenticationRoute,
  } as any)

const LayoutUsersIndexRoute = LayoutUsersIndexImport.update({
  path: '/users/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutReviewIndexRoute = LayoutReviewIndexImport.update({
  path: '/review/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutReferIndexRoute = LayoutReferIndexImport.update({
  path: '/refer/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFaqsIndexRoute = LayoutFaqsIndexImport.update({
  path: '/faqs/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutEventsIndexRoute = LayoutEventsIndexImport.update({
  path: '/events/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutEventtypeIndexRoute = LayoutEventtypeIndexImport.update({
  path: '/event_type/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDiscountIndexRoute = LayoutDiscountIndexImport.update({
  path: '/discount/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutUsersFlagedRoute = LayoutUsersFlagedImport.update({
  path: '/users/flaged',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutUsersAcceptedRoute = LayoutUsersAcceptedImport.update({
  path: '/users/accepted',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutEventsUpcomingRoute = LayoutEventsUpcomingImport.update({
  path: '/events/upcoming',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutEventsEventidRoute = LayoutEventsEventidImport.update({
  path: '/events/$event_id',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDiscountUpcomingRoute = LayoutDiscountUpcomingImport.update({
  path: '/discount/upcoming',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDiscountDiscountidRoute = LayoutDiscountDiscountidImport.update({
  path: '/discount/$discount_id',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authentication': {
      id: '/_authentication'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticationImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_authentication/forgot_password': {
      id: '/_authentication/forgot_password'
      path: '/forgot_password'
      fullPath: '/forgot_password'
      preLoaderRoute: typeof AuthenticationForgotpasswordImport
      parentRoute: typeof AuthenticationImport
    }
    '/_authentication/reset_password': {
      id: '/_authentication/reset_password'
      path: '/reset_password'
      fullPath: '/reset_password'
      preLoaderRoute: typeof AuthenticationResetpasswordImport
      parentRoute: typeof AuthenticationImport
    }
    '/_authentication/verification': {
      id: '/_authentication/verification'
      path: '/verification'
      fullPath: '/verification'
      preLoaderRoute: typeof AuthenticationVerificationImport
      parentRoute: typeof AuthenticationImport
    }
    '/_layout/scoreboard': {
      id: '/_layout/scoreboard'
      path: '/scoreboard'
      fullPath: '/scoreboard'
      preLoaderRoute: typeof LayoutScoreboardImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/videos': {
      id: '/_layout/videos'
      path: '/videos'
      fullPath: '/videos'
      preLoaderRoute: typeof LayoutVideosImport
      parentRoute: typeof LayoutImport
    }
    '/_authentication/': {
      id: '/_authentication/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticationIndexImport
      parentRoute: typeof AuthenticationImport
    }
    '/_layout/discount/$discount_id': {
      id: '/_layout/discount/$discount_id'
      path: '/discount/$discount_id'
      fullPath: '/discount/$discount_id'
      preLoaderRoute: typeof LayoutDiscountDiscountidImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/discount/upcoming': {
      id: '/_layout/discount/upcoming'
      path: '/discount/upcoming'
      fullPath: '/discount/upcoming'
      preLoaderRoute: typeof LayoutDiscountUpcomingImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/events/$event_id': {
      id: '/_layout/events/$event_id'
      path: '/events/$event_id'
      fullPath: '/events/$event_id'
      preLoaderRoute: typeof LayoutEventsEventidImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/events/upcoming': {
      id: '/_layout/events/upcoming'
      path: '/events/upcoming'
      fullPath: '/events/upcoming'
      preLoaderRoute: typeof LayoutEventsUpcomingImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/users/accepted': {
      id: '/_layout/users/accepted'
      path: '/users/accepted'
      fullPath: '/users/accepted'
      preLoaderRoute: typeof LayoutUsersAcceptedImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/users/flaged': {
      id: '/_layout/users/flaged'
      path: '/users/flaged'
      fullPath: '/users/flaged'
      preLoaderRoute: typeof LayoutUsersFlagedImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/discount/': {
      id: '/_layout/discount/'
      path: '/discount'
      fullPath: '/discount'
      preLoaderRoute: typeof LayoutDiscountIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/event_type/': {
      id: '/_layout/event_type/'
      path: '/event_type'
      fullPath: '/event_type'
      preLoaderRoute: typeof LayoutEventtypeIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/events/': {
      id: '/_layout/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof LayoutEventsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/faqs/': {
      id: '/_layout/faqs/'
      path: '/faqs'
      fullPath: '/faqs'
      preLoaderRoute: typeof LayoutFaqsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/refer/': {
      id: '/_layout/refer/'
      path: '/refer'
      fullPath: '/refer'
      preLoaderRoute: typeof LayoutReferIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/review/': {
      id: '/_layout/review/'
      path: '/review'
      fullPath: '/review'
      preLoaderRoute: typeof LayoutReviewIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/users/': {
      id: '/_layout/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof LayoutUsersIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthenticationRoute: AuthenticationRoute.addChildren({
    AuthenticationForgotpasswordRoute,
    AuthenticationResetpasswordRoute,
    AuthenticationVerificationRoute,
    AuthenticationIndexRoute,
  }),
  LayoutRoute: LayoutRoute.addChildren({
    LayoutScoreboardRoute,
    LayoutVideosRoute,
    LayoutDiscountDiscountidRoute,
    LayoutDiscountUpcomingRoute,
    LayoutEventsEventidRoute,
    LayoutEventsUpcomingRoute,
    LayoutUsersAcceptedRoute,
    LayoutUsersFlagedRoute,
    LayoutDiscountIndexRoute,
    LayoutEventtypeIndexRoute,
    LayoutEventsIndexRoute,
    LayoutFaqsIndexRoute,
    LayoutReferIndexRoute,
    LayoutReviewIndexRoute,
    LayoutUsersIndexRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/_authentication",
        "/_layout"
      ]
    },
    "/_authentication": {
      "filePath": "_authentication.jsx",
      "children": [
        "/_authentication/forgot_password",
        "/_authentication/reset_password",
        "/_authentication/verification",
        "/_authentication/"
      ]
    },
    "/_layout": {
      "filePath": "_layout.jsx",
      "children": [
        "/_layout/scoreboard",
        "/_layout/videos",
        "/_layout/discount/$discount_id",
        "/_layout/discount/upcoming",
        "/_layout/events/$event_id",
        "/_layout/events/upcoming",
        "/_layout/users/accepted",
        "/_layout/users/flaged",
        "/_layout/discount/",
        "/_layout/event_type/",
        "/_layout/events/",
        "/_layout/faqs/",
        "/_layout/refer/",
        "/_layout/review/",
        "/_layout/users/"
      ]
    },
    "/_authentication/forgot_password": {
      "filePath": "_authentication/forgot_password.jsx",
      "parent": "/_authentication"
    },
    "/_authentication/reset_password": {
      "filePath": "_authentication/reset_password.jsx",
      "parent": "/_authentication"
    },
    "/_authentication/verification": {
      "filePath": "_authentication/verification.jsx",
      "parent": "/_authentication"
    },
    "/_layout/scoreboard": {
      "filePath": "_layout/scoreboard.jsx",
      "parent": "/_layout"
    },
    "/_layout/videos": {
      "filePath": "_layout/videos.jsx",
      "parent": "/_layout"
    },
    "/_authentication/": {
      "filePath": "_authentication/index.jsx",
      "parent": "/_authentication"
    },
    "/_layout/discount/$discount_id": {
      "filePath": "_layout/discount/$discount_id.jsx",
      "parent": "/_layout"
    },
    "/_layout/discount/upcoming": {
      "filePath": "_layout/discount/upcoming.jsx",
      "parent": "/_layout"
    },
    "/_layout/events/$event_id": {
      "filePath": "_layout/events/$event_id.jsx",
      "parent": "/_layout"
    },
    "/_layout/events/upcoming": {
      "filePath": "_layout/events/upcoming.jsx",
      "parent": "/_layout"
    },
    "/_layout/users/accepted": {
      "filePath": "_layout/users/accepted.jsx",
      "parent": "/_layout"
    },
    "/_layout/users/flaged": {
      "filePath": "_layout/users/flaged.jsx",
      "parent": "/_layout"
    },
    "/_layout/discount/": {
      "filePath": "_layout/discount/index.jsx",
      "parent": "/_layout"
    },
    "/_layout/event_type/": {
      "filePath": "_layout/event_type/index.jsx",
      "parent": "/_layout"
    },
    "/_layout/events/": {
      "filePath": "_layout/events/index.jsx",
      "parent": "/_layout"
    },
    "/_layout/faqs/": {
      "filePath": "_layout/faqs/index.jsx",
      "parent": "/_layout"
    },
    "/_layout/refer/": {
      "filePath": "_layout/refer/index.jsx",
      "parent": "/_layout"
    },
    "/_layout/review/": {
      "filePath": "_layout/review/index.jsx",
      "parent": "/_layout"
    },
    "/_layout/users/": {
      "filePath": "_layout/users/index.jsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
